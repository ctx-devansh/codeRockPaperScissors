/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rockpaperscissors;
import java.util.Random;
import java.util.HashMap;

/**
 *
 * @author DEVANSH GUPTA
 */
public class RPS extends javax.swing.JFrame {

    final static String ROCK = "rock";
    final static String PAPER = "paper";
    final static String SCISSORS = "scissors";
    final static String ROCK_PATH = "D:\\OneDrive\\Java Projects\\RockPaperScissors\\src\\images\\rock128.png";
    final static String PAPER_PATH = "D:\\OneDrive\\Java Projects\\RockPaperScissors\\src\\images\\paper128.png";
    final static String SCISSORS_PATH = "D:\\OneDrive\\Java Projects\\RockPaperScissors\\src\\images\\scissors128.png";
    /**
     * Creates new form RPS
     */
    public RPS() {
        initComponents();
    }
    
    private static String randomChoice(){
        String[] choices = {ROCK,PAPER,SCISSORS};
        int random = new Random().nextInt(3);
        return choices[random];
    }
    
    private static int isWin(String cpuChoice,String userChoice){
        if(userChoice.equals(cpuChoice)){
            return 1;
        }
        HashMap<String,String> winRules = new HashMap<>();
        winRules.put(ROCK,SCISSORS);
        winRules.put(SCISSORS,PAPER);
        winRules.put(PAPER,ROCK);
        if(winRules.get(userChoice).equals(cpuChoice)){
            return 2;
        }else{
            return 0;
        }
    }
    
    private static void playGame(String userChoice){
        String cpuChoice = randomChoice();
        int result = isWin(cpuChoice,userChoice);
        HashMap<String,String> imagePaths = new HashMap<>();
        imagePaths.put(ROCK,ROCK_PATH);
        imagePaths.put(PAPER,PAPER_PATH);
        imagePaths.put(SCISSORS,SCISSORS_PATH);
        String playerImagePath = imagePaths.get(userChoice);
        String cpuImagePath = imagePaths.get(cpuChoice);
        playerImageLabel.setIcon(new javax.swing.ImageIcon(playerImagePath)); 
        cpuImageLabel.setIcon(new javax.swing.ImageIcon(cpuImagePath)); 
        switch(result){
            case 0:
                messageLabel.setText("CPU won!");
                break;
            case 1:
                messageLabel.setText("Draw");
                break;
            case 2:
                messageLabel.setText("You won!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerRock = new javax.swing.JButton();
        playerPaper = new javax.swing.JButton();
        playerScissor = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cpuImageLabel = new javax.swing.JLabel();
        playerImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerRock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rock64.png"))); // NOI18N
        playerRock.setBorder(null);
        playerRock.setBorderPainted(false);
        playerRock.setContentAreaFilled(false);
        playerRock.setPreferredSize(new java.awt.Dimension(70, 70));
        playerRock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerRockActionPerformed(evt);
            }
        });

        playerPaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paper64.png"))); // NOI18N
        playerPaper.setBorder(null);
        playerPaper.setBorderPainted(false);
        playerPaper.setContentAreaFilled(false);
        playerPaper.setPreferredSize(new java.awt.Dimension(70, 70));
        playerPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerPaperActionPerformed(evt);
            }
        });

        playerScissor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scissors64.png"))); // NOI18N
        playerScissor.setBorder(null);
        playerScissor.setBorderPainted(false);
        playerScissor.setContentAreaFilled(false);
        playerScissor.setPreferredSize(new java.awt.Dimension(70, 70));
        playerScissor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerScissorActionPerformed(evt);
            }
        });

        messageLabel.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 18)); // NOI18N
        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLabel.setText("-----");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PLAYER");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CPU");

        cpuImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        playerImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(playerImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(cpuImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(85, 85, 85))
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(playerRock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(playerPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(playerScissor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(46, 46, 46)
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playerImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(cpuImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerScissor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerRock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        setSize(new java.awt.Dimension(690, 460));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void playerRockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerRockActionPerformed
        playGame(ROCK);
    }//GEN-LAST:event_playerRockActionPerformed

    private void playerPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerPaperActionPerformed
        playGame(PAPER);
    }//GEN-LAST:event_playerPaperActionPerformed

    private void playerScissorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerScissorActionPerformed
        playGame(SCISSORS);
    }//GEN-LAST:event_playerScissorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel cpuImageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private static javax.swing.JLabel messageLabel;
    private static javax.swing.JLabel playerImageLabel;
    private javax.swing.JButton playerPaper;
    private javax.swing.JButton playerRock;
    private javax.swing.JButton playerScissor;
    // End of variables declaration//GEN-END:variables
}
